name: CI/CD Pipeline

on:
  push:
    branches: [dev]
  workflow_dispatch:  # Manual triggers for merge and prod deploy
    inputs:
      action:
        description: "What do you want to do?"
        required: true
        default: "merge"
        type: choice
        options:
          - merge
          - deploy-prod


jobs:
  deploy-dev:
    name: üöÄ Deploy to Dev (Auto)
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    env:
      ENV_NAME: ${{ github.ref_name == 'master' && 'prod' || 'dev' }}
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: dev

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Load environment file
        run: |
          echo "Using environment: $ENV_NAME"
          cp .env.$ENV_NAME .env

      - name: Install dependencies & run tests with coverage
        run: |
          echo "Environment: $ENV_NAME"
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          pytest --cov=maths --cov-report=term --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: ${{ matrix.python-version }}-${{ env.ENV_NAME }}

  merge-dev-to-master:
    name: üîÅ Merge Dev ‚Üí Master (Manual)
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'merge' }}
    needs: deploy-dev
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: master
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git fetch origin dev
          git merge origin/dev --no-edit
          git push origin master

  deploy-prod:
    name: üöÄ Deploy to Prod (Master - Manual)
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'deploy-prod' }}
    needs: merge-dev-to-master
    runs-on: ubuntu-latest
    env:
      ENV_NAME: ${{ github.ref_name == 'master' && 'prod' || 'dev' }}
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: dev

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Load environment file
        run: |
          echo "Using environment: $ENV_NAME"
          cp .env.$ENV_NAME .env

      - name: Install dependencies & run tests with coverage
        run: |
          echo "Environment: $ENV_NAME"
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          pytest --cov=maths --cov-report=term --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: ${{ matrix.python-version }}-${{ env.ENV_NAME }}