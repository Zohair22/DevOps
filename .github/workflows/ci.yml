name: CI/CD Pipeline

on:
  push:
    branches: [dev, master]
  pull_request:
  workflow_dispatch:  # Allows manual trigger with inputs
    inputs:
      action:
        description: "What do you want to do?"
        required: true
        default: "deploy-dev"
        type: choice
        options:
          - deploy-dev
          - deploy-prod
          - merge

jobs:
  dev-tests:
    name: Run Dev Tests
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    env:
      ENV_NAME: dev
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - run: |
          echo "Using environment: $ENV_NAME"
          cp .env.dev .env
          pip install -U pip pytest pytest-cov
          pytest --cov=maths --cov-report=term --cov-report=xml
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: dev

  merge-dev-to-master:
    name: Merge dev â†’ master
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: master
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git fetch origin dev
          git merge origin/dev --no-edit
          git push origin master

  deploy-dev:
    name: Deploy to Dev
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: dev
      - run: |
          echo "ðŸš€ Deploying to Dev Server"
          chmod +x ./deploy-to.sh
          ./deploy-to.sh dev

  deploy-prod:
    name: Deploy to Prod (master)
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: master
      - run: |
          echo "ðŸš€ Deploying to Production Server"
          chmod +x ./deploy-to.sh
          ./deploy-to.sh prod